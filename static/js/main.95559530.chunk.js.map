{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","email","setEmail","confirmed","setConfirmed","invalid","setInvalid","form","onSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","status","catch","error","console","log","className","src","logo","alt","type","placeholder","onChange","target","value","style","color","confimationPage","active","config","angle","spread","startVelocity","elementCount","dragFriction","duration","stagger","width","height","perspective","colors","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAAe,MAA0B,iC,+BC6E1BA,MAvEf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAyCMC,EACJ,uBAAMC,SA1BS,SAACC,GAChBA,EAAEC,iBACFJ,GAAW,GACXK,MAAM,8CAA+C,CAC7CC,OAAQ,OACRC,QAAQ,CACJ,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBf,YAGPgB,MAAK,SAACC,GACe,MAAfA,EAAIC,QACHf,GAAa,GAEE,MAAfc,EAAIC,QACNb,GAAW,MAGhBc,OAAM,SAACC,GACJC,QAAQC,IAAI,cAAeF,OAKnC,UACE,qBAAKG,UAAU,OAAOC,IAAKC,EAAMC,IAAI,gBACrC,sDACA,uBAAOC,KAAK,OAAOC,YAAY,QAAQC,SAAU,SAAArB,GAAC,OAAEP,EAASO,EAAEsB,OAAOC,UACtE,wBAAQJ,KAAK,SAAb,wBACCvB,EAAU,qBAAK4B,MAAO,CAACC,MAAO,OAApB,SAA4B,yDAAyC,QAI9EC,EACJ,gCACE,qBAAKX,UAAU,OAAOC,IAAKC,EAAMC,IAAI,gBACrC,0FAIJ,OACE,qBAAKH,UAAU,MAAf,SACE,sBAAKA,UAAU,UAAf,UACGrB,EAAYgC,EAAkB5B,EAC/B,qBAAKiB,UAAU,WAAf,SAA0B,cAAC,IAAD,CAAUY,OAAQjC,EAAWkC,OA5D9C,CACbC,MAAO,GACPC,OAAQ,IACRC,cAAe,GACfC,aAAc,GACdC,aAAc,IACdC,SAAU,IACVC,QAAS,EACTC,MAAO,OACPC,OAAQ,OACRC,YAAa,QACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,sBCV1CC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlC,MAAK,YAAkD,IAA/CmC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.95559530.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.13237d1f.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport {useState} from 'react';\nimport Confetti from 'react-dom-confetti';\n\n\nfunction App() {\n  const [email, setEmail] = useState(\"\");\n  const [confirmed, setConfirmed] = useState(false);\n  const [invalid, setInvalid] = useState(false);\n\n  const config = {\n    angle: 90,\n    spread: 360,\n    startVelocity: 40,\n    elementCount: 70,\n    dragFriction: 0.12,\n    duration: 500,\n    stagger: 3,\n    width: \"10px\",\n    height: \"10px\",\n    perspective: \"500px\",\n    colors: [\"#a864fd\", \"#29cdff\", \"#78ff44\", \"#ff718d\", \"#fdff6a\"]\n  };\n\n  const joinBeta = (e) => {\n    e.preventDefault();\n    setInvalid(false);\n    fetch('https://emailcookiyapi.herokuapp.com/submit', {\n            method: \"POST\",\n            headers:{\n                \"Content-Type\": \"application/json\", \n            },\n            body: JSON.stringify({\n                email\n            }),\n        })\n        .then((res)=>{\n            if(res.status === 201){\n                setConfirmed(true);\n            }\n            if (res.status === 406){\n              setInvalid(true);\n            }\n        })\n        .catch((error)=>{\n            console.log(\"we are here\", error) \n        })\n  }\n\n  const form = (\n    <form onSubmit={joinBeta}>\n      <img className=\"logo\" src={logo} alt=\"Cookiy Logo\"/>\n      <p>Sign up for our beta!</p>\n      <input type=\"text\" placeholder=\"Email\" onChange={e=>setEmail(e.target.value)}/>\n      <button type=\"submit\">Join Beta!</button>\n      {invalid ? <div style={{color: \"red\"}}><span>Enter a valid email</span></div> : null}\n    </form>\n  )\n  \n  const confimationPage = (\n    <div>\n      <img className=\"logo\" src={logo} alt=\"Cookiy Logo\"/>\n      <p>Thank you so much! You've been registered in our beta!</p>\n    </div>\n  )\n\n  return (\n    <div className=\"App\">\n      <div className=\"content\">\n        {confirmed ? confimationPage : form }\n        <div className=\"confetti\"><Confetti active={confirmed} config = {config}/></div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}